## status bar
set-option -g status-utf8 on
set -g status-right 'CPU: #(cat /sys/class/hwmon/hwmon2/device/temp1_input | colrm 3)Â° | #(date +"%A, %d.%m | %H:%M")'
set status-interval 2

# default statusbar colors
set-option -g status-bg colour235 #base02
set-option -g status-fg white
#set-option -g status-attr default 
#
# default window title colors
set-window-option -g window-status-fg white #"#F92672" #pink
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg black
set-window-option -g window-status-current-bg "#A6E22E" #green-yellow
set-window-option -g window-status-current-attr bold 

# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01
# completly white border
#set-option -g pane-border-fg white
#set-option -g pane-active-border-fg white

# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg white #"#66D9EF" #blue

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour colour64 #green

# color
set -g default-terminal "screen-256color"

# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
bind-key C-a last-window
# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Vi copypaste mode
set-window-option -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
bind-key J copy-mode -u
bind-key P paste-buffer


# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# vi-style controls for copy mode
setw -g mode-keys vi

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# auto window rename
set-window-option -g automatic-rename
